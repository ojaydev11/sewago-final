name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

env:
  NODE_VERSION: '20'
  MONGODB_URI: ${{ secrets.MONGODB_URI }}
  JWT_ACCESS_SECRET: ${{ secrets.JWT_ACCESS_SECRET }}
  JWT_REFRESH_SECRET: ${{ secrets.JWT_REFRESH_SECRET }}

jobs:
  backend-test:
    name: Backend Build & Test
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        cache-dependency-path: 'backend/package-lock.json'
    
    - name: Install backend dependencies
      run: |
        cd backend
        npm ci
    
    - name: Lint backend code
      run: |
        cd backend
        npm run lint
    
    - name: Run backend tests
      run: |
        cd backend
        npm test
    
    - name: Build backend
      run: |
        cd backend
        npm run build
    
    - name: Health check test
      run: |
        cd backend
        npm run health || echo "Health check skipped - server not running"

  frontend-test:
    name: Frontend Build & Test
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        cache-dependency-path: 'frontend/package-lock.json'
    
    - name: Install frontend dependencies
      run: |
        cd frontend
        npm ci
    
    - name: Lint frontend code
      run: |
        cd frontend
        npm run lint
    
    - name: Type check frontend
      run: |
        cd frontend
        npm run type-check
    
    - name: Run frontend tests
      run: |
        cd frontend
        npm test
    
    - name: Build frontend
      run: |
        cd frontend
        npm run build
      env:
        SKIP_DB: true
        NODE_ENV: production

  e2e-test:
    name: End-to-End Tests
    runs-on: ubuntu-latest
    needs: [backend-test, frontend-test]
    
    services:
      mongodb:
        image: mongo:7
        ports:
          - 27017:27017
        options: >-
          --health-cmd "mongosh --eval 'db.adminCommand(\"ping\")'"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        cache-dependency-path: 'package-lock.json'
    
    - name: Install root dependencies
      run: npm ci
    
    - name: Install all dependencies
      run: npm run install:all
    
    - name: Install Playwright
      run: npx playwright install --with-deps
    
    - name: Start services for E2E
      run: |
        npm run e2e:prepare
      env:
        MONGODB_URI: mongodb://localhost:27017/sewago-test
        NODE_ENV: test
        PORT: 4100
        CLIENT_ORIGIN: http://localhost:3001
    
    - name: Run E2E tests
      run: npm run e2e:start
      env:
        MONGODB_URI: mongodb://localhost:27017/sewago-test
        NODE_ENV: test
    
    - name: Upload E2E artifacts
      uses: actions/upload-artifact@v4
      if: failure()
      with:
        name: e2e-artifacts
        path: artifacts/e2e/
        retention-days: 7

  build-status:
    name: Build Status Check
    runs-on: ubuntu-latest
    needs: [backend-test, frontend-test, e2e-test]
    if: always()
    
    steps:
    - name: Check build results
      run: |
        if [[ "${{ needs.backend-test.result }}" == "success" && 
              "${{ needs.frontend-test.result }}" == "success" && 
              "${{ needs.e2e-test.result }}" == "success" ]]; then
          echo "✅ All builds and tests passed!"
          exit 0
        else
          echo "❌ Some builds or tests failed:"
          echo "Backend: ${{ needs.backend-test.result }}"
          echo "Frontend: ${{ needs.frontend-test.result }}"
          echo "E2E: ${{ needs.e2e-test.result }}"
          exit 1
        fi